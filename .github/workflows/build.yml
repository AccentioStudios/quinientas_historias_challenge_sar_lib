name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:  
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '18.12.1'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: v1.0.0-beta+${{ github.run_number }}
        body_path: release_notes.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Publish Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        draft: false
        files: ./dist/sarlib.min.js
        tag_name: v1.0.0-beta+${{ github.run_number }}
        body_path: release_notes.md
        token: ${{ github.token }}

    - name: Delete Older Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 3
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: Publish package on NPM ðŸ“¦
      run: |
        echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
        npm pack && npm publish *.tgz --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
